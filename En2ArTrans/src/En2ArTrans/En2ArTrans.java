/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package En2ArTrans;

import java.awt.Component;
import java.awt.ComponentOrientation;
import java.awt.Image;
import java.awt.event.ComponentEvent;
import java.awt.event.ComponentListener;
import java.io.*;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.*;

//import javax.swing.text.*;

/**
 *
 * @author Sanousy
 */
public class En2ArTrans extends JFrame
{

    List<String> unknownWords = null;
    Translate Translator = new Translate();

    /**
     * Creates new form MainWindow
     */
    public En2ArTrans()
    {
        try {
            initComponents();
            Image i = ImageIO.read(getClass().getResource("/en2artrans.png"));
            setIconImage(i);
        } catch (IOException ex) {
            Logger.getLogger(En2ArTrans.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        pppOutput = new javax.swing.JPopupMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        spltMain = new javax.swing.JSplitPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtInput = new javax.swing.JTextPane();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtOutput = new javax.swing.JTextPane();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        lblStatus = new javax.swing.JLabel();

        jMenuItem3.setText("معنى الفقرة ضمن السياق");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jMenuItem3ActionPerformed(evt);
            }
        });
        pppOutput.add(jMenuItem3);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 204));
        addWindowListener(new java.awt.event.WindowAdapter()
        {
            public void windowOpened(java.awt.event.WindowEvent evt)
            {
                formWindowOpened(evt);
            }
        });

        spltMain.setDividerLocation(300);
        spltMain.setDividerSize(4);

        txtInput.setBackground(new java.awt.Color(255, 255, 240));
        txtInput.setFont(new java.awt.Font("Microsoft Yi Baiti", 0, 24)); // NOI18N
        txtInput.setComponentPopupMenu(pppOutput);
        txtInput.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                txtInputFocusGained(evt);
            }
        });
        jScrollPane3.setViewportView(txtInput);

        spltMain.setLeftComponent(jScrollPane3);

        txtOutput.setBackground(new java.awt.Color(255, 255, 240));
        txtOutput.setFont(new java.awt.Font("Sakkal Majalla", 1, 24)); // NOI18N
        txtOutput.setComponentPopupMenu(pppOutput);
        txtOutput.addFocusListener(new java.awt.event.FocusAdapter()
        {
            public void focusGained(java.awt.event.FocusEvent evt)
            {
                txtOutputFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt)
            {
                txtOutputFocusLost(evt);
            }
        });
        jScrollPane4.setViewportView(txtOutput);

        spltMain.setRightComponent(jScrollPane4);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));

        jButton2.setBackground(new java.awt.Color(255, 255, 153));
        jButton2.setText("ترجمة");
        jButton2.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setBackground(new java.awt.Color(255, 255, 153));
        jButton3.setText("حفظ الترجمة");

        btnOpen.setBackground(new java.awt.Color(255, 255, 153));
        btnOpen.setText("فتح");
        btnOpen.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                btnOpenActionPerformed(evt);
            }
        });

        jButton4.setBackground(new java.awt.Color(255, 255, 153));
        jButton4.setText("إضافة كلمات جديدة");
        jButton4.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                jButton4ActionPerformed(evt);
            }
        });

        lblStatus.setText("                           ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4)
                    .addComponent(lblStatus)))
            .addComponent(btnOpen, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spltMain, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(spltMain, javax.swing.GroupLayout.DEFAULT_SIZE, 267, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened

        windowInit();
    }//GEN-LAST:event_formWindowOpened
    JPopupMenu popup;

    private void windowInit()
    {
        splitRatio = 0.5;
        spltMain.setDividerLocation(splitRatio);
        txtOutput.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);

        this.addComponentListener(new ComponentListener()
        {

            @Override
            public void componentResized(ComponentEvent e)
            {
                windowResize(e);
            }

            @Override
            public void componentMoved(ComponentEvent e)
            {
                // throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void componentShown(ComponentEvent e)
            {
                //   throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }

            @Override
            public void componentHidden(ComponentEvent e)
            {
                //  throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
            }
        });

    }

    private void windowResize(ComponentEvent e)
    {
        spltMain.setDividerLocation(splitRatio);
        txtOutput.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton2ActionPerformed
    {//GEN-HEADEREND:event_jButton2ActionPerformed
        unknownWords = null;
        Translator.unknownWords = null;
        Thread t = new Thread(new Runnable()
        {
            public void run()
            {
                txtOutput.setText(Translator.text(txtInput.getText(), lblStatus));
                unknownWords = Translator.unknownWords;
            }
        });
        t.start();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_btnOpenActionPerformed
    {//GEN-HEADEREND:event_btnOpenActionPerformed
        loadFile();
    }//GEN-LAST:event_btnOpenActionPerformed

    void loadFile()
    {
        JFileChooser OpenFile = new JFileChooser();
        OpenFile.showOpenDialog(null);
        try {
            FileReader reader = new FileReader(OpenFile.getSelectedFile().toString());
            BufferedReader br = new BufferedReader(reader);
            txtInput.read(br, null);
            br.close();
            txtInput.requestFocus();
        } catch (Exception e2) {
            System.out.println(e2);
        }
    }

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jButton4ActionPerformed
    {//GEN-HEADEREND:event_jButton4ActionPerformed
        loadNewWords();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jMenuItem3ActionPerformed
    {//GEN-HEADEREND:event_jMenuItem3ActionPerformed
        NewWords n = new NewWords();
        String selection = "";
        if (txtInput == CurrrentText) {
            selection = txtInput.getSelectedText();
        } else if (txtOutput == CurrrentText) {
            selection = txtOutput.getSelectedText();
        }
        n.populateWords(selection);
        n.setVisible(true);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void txtInputFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtInputFocusGained
    {//GEN-HEADEREND:event_txtInputFocusGained
        CurrrentText = txtInput;
    }//GEN-LAST:event_txtInputFocusGained

    private void txtOutputFocusGained(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtOutputFocusGained
    {//GEN-HEADEREND:event_txtOutputFocusGained
        CurrrentText = txtOutput;
    }//GEN-LAST:event_txtOutputFocusGained

    private void txtOutputFocusLost(java.awt.event.FocusEvent evt)//GEN-FIRST:event_txtOutputFocusLost
    {//GEN-HEADEREND:event_txtOutputFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOutputFocusLost

    Component CurrrentText = null;
    private double splitRatio = 0.5;
    private boolean mutex = false;
    boolean allowChangeRatio = false;

    void resetRatio()
    {
        if (true || allowChangeRatio) {
            splitRatio = (double) spltMain.getDividerLocation() / (double) getSize().width;
        }
    }

    void loadNewWords()
    {
        Thread t = new Thread(new Runnable()
        {
            public void run()
            {
                loadNewWords_thread();
            }
        });
        t.start();
    }

    int loadNewWords_thread()
    {

        FileReader reader = null;
        try {
            JFileChooser OpenFile = new JFileChooser();
            OpenFile.showOpenDialog(null);
            reader = new FileReader(OpenFile.getSelectedFile().toString());
            BufferedReader br = new BufferedReader(reader);
            String ln = "";
            String sql, preSql;
            String word, root, arabicRoot;
            int gender, plurality, activeness, isVerb, isNoun, isAdj, isAdv, isDif, tense, isAux;
            database db = new database("swd.sqlite");
            br.readLine(); // skip the header line
            while ((ln = br.readLine()) != null) {
                String[] s = ln.split(",");

                //(word varchar,
                //root varchar,
                //gender smallint,
                //plurality smallint,
                // activeness smallint,
                //arabicRoot varchar,
                //isVerb smallint,
                //isNoun smallint,
                //isAdj smallint,
                //isAdv smallint,
                //isDif smallint,
                //tense smallint)
                if (s[0].toUpperCase().compareTo("A") == 0) {
                    word = s[1].toUpperCase();

                    lblStatus.setText("جاري إضافة كلمة:" + word);

                    root = s[2].toUpperCase();
                    gender = Integer.parseInt(s[3]);
                    plurality = Integer.parseInt(s[4]);
                    activeness = Integer.parseInt(s[5]);
                    arabicRoot = s[6];
                    isVerb = Integer.parseInt(s[7]);
                    isNoun = Integer.parseInt(s[8]);
                    isAdj = Integer.parseInt(s[9]);
                    isAdv = Integer.parseInt(s[10]);
                    isDif = Integer.parseInt(s[11]);
                    tense = Integer.parseInt(s[ 12]);
                    isAux = Integer.parseInt(s[13]);
                    preSql = "delete from dict where  word = \"%s\";";
                    sql = String.format(preSql, word);
                    db.exec(sql);

                    preSql = "insert into dict (word,root,gender,plurality,activeness,arabicRoot,isVerb,isNoun,isAdj,isAdv,isDif,tense,isAux) "
                            + " values (\"%s\",\"%s\",%d,%d,%d,\"%s\",%d,%d,%d,%d,%d,%d,%d);";
                    sql = String.format(preSql, word, root, gender, plurality, activeness, arabicRoot, isVerb, isNoun, isAdj, isAdv, isDif, tense, isAux);
                    db.exec(sql);
                } else if (s[0].toUpperCase().compareTo("D") == 0) {
                    word = s[1];
                    lblStatus.setText("جاري حذف كلمة:" + word);
                    preSql = "delete from dict where  word = \"%s\";";
                    sql = String.format(preSql, word);
                    db.exec(sql);
                }
            }
            br.close();

        } catch (FileNotFoundException ex) {
            Logger.getLogger(En2ArTrans.class
                    .getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(En2ArTrans.class
                    .getName()).log(Level.SEVERE, null, ex);
        } finally {
            try {
                reader.close();

            } catch (IOException ex) {
                Logger.getLogger(En2ArTrans.class
                        .getName()).log(Level.SEVERE, null, ex);
            }
        }
        try {
            Thread.currentThread().join();

        } catch (InterruptedException ex) {
            Logger.getLogger(En2ArTrans.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
        Thread.currentThread().interrupt();
        return 0;
    }

    private void openNewWords()
    {
        NewWords nw;
        nw = new NewWords();
        String[] x = null;
        unknownWords.toArray(x);
        nw.setVisible(true);
    }
//        private void miFileOpenActionPerformed(java.awt.event.ActionEvent evt) {                                           
//        JFileChooser OpenFile = new JFileChooser();
//        OpenFile.showOpenDialog(null);
//        try {
//            FileReader reader = new FileReader(OpenFile.getSelectedFile().toString());
//            BufferedReader br = new BufferedReader(reader);
//            txtInput.read(br, null);
//            br.close();
//            txtInput.requestFocus();
//        } catch (Exception e2) {
//        }
//
//    }                                          
//
//    private void formWindowOpened(java.awt.event.WindowEvent evt) {                                  
//        double width = getContentPane().getSize().getWidth();
//        //   txtInput.setText(Double.toString(width));
//        spltMain.setDividerLocation((int) (width / 2));
//    }                                 
//
//    private void miTranslationTranslateActionPerformed(java.awt.event.ActionEvent evt) {                                                       
//        txtOutput.setText(new Translate().text(txtInput.getText()));
//    }                                                      

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    javax.swing.UIManager.setLookAndFeel(javax.swing.UIManager.getSystemLookAndFeelClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(En2ArTrans.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(En2ArTrans.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(En2ArTrans.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(En2ArTrans.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new e2aSplash("/en2arsplash.png",  4000).setVisible(true);

                new En2ArTrans().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JPopupMenu pppOutput;
    private javax.swing.JSplitPane spltMain;
    private javax.swing.JTextPane txtInput;
    private javax.swing.JTextPane txtOutput;
    // End of variables declaration//GEN-END:variables
}
